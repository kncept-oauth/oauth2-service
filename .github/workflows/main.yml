# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Main Build
        run: ./gradlew build check

# Upload the core API and Implementation as github artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: service-artifacts
          path: service-*/build/libs/service-*.jar
          retention-days: 7

      - name: Build AWS Lambda Deployment
        run: ./gradlew :aws-service:dist

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: AWS CDK npm init
        run: npm ci
        working-directory: aws-deploy
      - name: AWS CDK cdk deploy
        run: npm run cdk deploy OidcJavaLambda
        working-directory: aws-deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          LAMBDA_HOSTNAME: ${{ vars.LAMBDA_HOSTNAME }}
          LOOKUP_BASENAME: ${{ vars.LOOKUP_BASENAME }}

