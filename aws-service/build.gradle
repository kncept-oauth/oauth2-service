
apply plugin: 'java'

group = 'com.kncept.oauth2'
version = '0.0.1'

defaultTasks 'libJar'

// workaround to include resources
sourceSets.main {
    resources.srcDirs += [
            new File(rootDir, 'service-implementation/src/main/resources'),
    ]
}

// use JUnit5 Platform for testing
test {
    useJUnitPlatform()
}


repositories {
	mavenLocal()
	mavenCentral()
}

def junit5version = '5.8.2'
dependencies {

	// see https://docs.aws.amazon.com/lambda/latest/dg/java-package.html
	// implementation 'software.amazon.awssdk:lambda'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'


    implementation platform('software.amazon.awssdk:bom:2.17.266')
    implementation 'software.amazon.awssdk:dynamodb'

    // project dependencies
    implementation project(':service-implementation')
    implementation project(':service-interfaces')
    implementation project(':service-crypto')

	testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junit5version
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:' + junit5version
}


task zipDist(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

task copyJars(type: Copy) {
    doFirst {
        project.file('build/dependency-libs').mkdirs()
    }
    from configurations.runtimeClasspath
    into project.file('build/dependency-libs')
}

task dist {}

dist.dependsOn zipDist
dist.dependsOn jar
dist.dependsOn copyJars